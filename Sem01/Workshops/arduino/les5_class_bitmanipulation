vragen solderen? Edwin vragen snel cursus solderen
defecte arduino

#class Button

class is een blauwdruk van een object, wordt pas een object als een constructor oproept. Zelfde naam als class

Breadbord weerstand pulldown maken, opzoeken

Constructor, class blue print

class heeft x aantal methodes(functies) en data(attributen) alles bij elkaar zijn members. 
Welke methodes zijn publiek en welke private.

Constructor wat je initialiseeert, meer van opzoeken

Object maken 
static Button btn(BTN_PIN);

btn.IsPressed()
of
!btn.IsPressed()

#Bit manipulatie
registers manipulatie, dat zit in de microcontroller
Wat kunnen we ermee doen:
- bitjes lezen, bitjes zetten en togglen

<<
??
&
|
^
nog iets

Bitwise left shit (<<)
alle bitjes in een byte schrijft 2 plekken naar link, wat eruit schrijft is weg en rechts komen nuller erbij.

vermedigvuldige met 2, 4, 8, 16 per 1, 2, 3, 4 stappen

Bitwise right sift (>>)
zelf als left shift maar andersom

hier dan delen

Bitwise AND (&)
Beide 1 dan pas een 1

Bitwise OR (|)
als 1 vna beide 1, dan is resultaat 1

Bitwise XOR (^)
exlusive or, als 1 van beide is 1, dan 1, beide 1 dan 0 ,beide 0 dan 0

Bitwise complement (~)
alles omklappen 1= 0 0 = 1

Dit om geheugen te besparen, want soms gebruiken meerdere functies dezelfde bits

0b1000; = 0b00001000, alles links wordt aaangeveuld met nulletjes

Bitjes wil j lezen, schrijven en omzetten, dat wil je ermee doen

read voorbeeld gehad

scrhijven, eerst wat je wilt schrijven 0 maken en dan schrijven wat je er wilt hebben
nul maken, wat wil je hebben, op jusit plek zetten en dan erin zetten

omklappen, mask en dan xor

1 regel code in de praktijk, nu uitgelegd via vee lstpappen

## Arduino
Arduino heeft een aantal registers

voor Port B, heeeft een aantal registor, voor I&O 3

DDRB 1 = output en 0 is input
dus zet pitjes voor data direction

pinntjes hoog of laag voltage 0 of 1

op bit niveau werken maakt het programme sneller ipv librarys

zowel compiler als applicatie wordt een stuk sneller

pb0 

DDRB = DDRB & 0b11111110;
(via and blijft een 1 een 1 maar laatste bit is sowieso 0 nu)
PORTB = PORTB & | 0b00000001;

lastReading = PINB $ 0b1; (dit pakt het meeste rechtste bitje)

Cryptografie doen ze dit veel 

ppt, nieuwe code erin
